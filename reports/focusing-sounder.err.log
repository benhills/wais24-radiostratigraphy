Traceback (most recent call last):
  File "/Users/bhills/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/bhills/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/bhills/anaconda3/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/bhills/anaconda3/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/bhills/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/bhills/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/bhills/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from sar_geometry import *

# define the geometry
c = 3e8
t0 = 4e-6     # range to target at closest approach (assume x0 is 0)
h = 500 # height above ice surface
dx = .1        # x step
Xs = np.arange(-100.,100+dx,dx) # along-track distances within the synthetic aperture

# for a given squint angle (theta) find the depth in ice 
# and along-track distance (x0) from center of aperture to target
theta_sq = 1e-10*np.pi/180.
r0 = t0*c
# range offset within aperture - air only so simple geometry
R1_air = (np.sqrt(r0**2.+Xs**2.) - r0)/c
# range offset within aperture - with ice so ray bending
R1_ice = SAR_aperture_raybend(t0, h, Xs, theta_sq)

# again with non-zero squint
theta_sq = -3.*np.pi/180.
# range offset within aperture - air only so simple geometry
x0 = r0*np.sin(theta_sq)   # distance from center of aperture to closest approach
h_air = r0*np.cos(theta_sq)    # vertical height above target at closest approach
R2_air = (np.sqrt(h_air**2.+(Xs-x0)**2.) - h_air)/c
# range offset within aperture - with ice so ray bending
d, x0 = get_depth_dist(t0,h,theta_sq)
R2_ice = SAR_aperture_raybend(t0, h, Xs, theta_sq)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 3[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[0;32m----> 3[0m [38;5;28;01mfrom[39;00m [38;5;21;01msar_geometry[39;00m [38;5;28;01mimport[39;00m [38;5;241m*[39m
[1;32m      5[0m [38;5;66;03m# define the geometry[39;00m
[1;32m      6[0m c [38;5;241m=[39m [38;5;241m3e8[39m

[0;31mModuleNotFoundError[0m: No module named 'sar_geometry'

